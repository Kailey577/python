import math
'''
1. Information that is stored and manipulated by computers is called data.
true
2. Since floating-point numbers are extremely accurate, they should gener- ally be used instead of ints.
false
3. Operations like addition and subtraction are defined in the math library.
true
4. The number of possible arrangements of n items is equal to n!.
true
5. The sqrt function computes the squirt of a number.
false
6. The float data type is identical to the mathematical concept of a real number.
false

7. Computers represent numbers using base-2 (binary) representations.
true
8. A hardware float can represent a larger range of values than a hardware int.
true
9. Type conversion functions such as float are a safe alternative to eval for getting a number as user input.
true
 10. In Python, 4+5 produces the same result type as 4 . 0+5. 0 .
 false

MULTIPLE CHOICe:
1. Which of the following is not a built-in Python data type? a) int b) float c) rational d) string
c, rational
2. Which of the following is not a built-in operation? a)+ b)% c) abs () d) sqrt()
d, sqrt()
3. In order to use functions in the math library, a program must include a) a comment b) a loop c) an operator d) an import statement
d, an import statement
4. The value of 4! is
a)9 b)24 c)41 d)120
b, 24
5. a float
6.c, 32
7. In a mixed-type expression involving ints and floats, Python will convert:
ints to floats
8. Which of the following is not a Python type-conversion function? a) float b) round c) int d) abs
d, abs
9, a, accumulator
10. In modern Python, an int value that grows larger than the underlying
hardware int
a, causes an overflow
DISCUSSION

1. Show the result of evaluating each expression.
Be sure that the value is in the proper form to indicate
its type (int or float).
If the expression is illegal, explain why.
a) 4.0/10.0+3.5*2 = 7.4
b)10%4+6/2 = 5.0
c)abs(4-20//3)**3 = 8
d)sqrt(4.5- 5.0)+7 * 3: this is illegal, sqrt is not defined
e) e) 3*10//3+10%3 = 11
f)3 ** 3 = 27

2.
Translate each of the following mathematical expressions into an
 equivalent Python expression. You may assume that the math
 library has been imported (via import math).
a) (3+4)*5
b) n*(n-1)/2
c)4*3.14**2
d) math.sqrt(r*math.cos(a)**2+r*math.sin(b)**2)
e)(y2-y1)/(x2-x1)

3.
Show the sequence of numbers that would be generated by each of the
following range expressions.
a) range (5) : 
0, 1, 2, 3, 4
b) range (3, 10)
3, 4, 5, 6, 7, 8, 9
c) range (4, 13, 3)
4, 7 10
d) range (15, 5, -2)
15,13,11,9,7
e) range(5, 3)
nothing
5, 

4.
a)
1 : 1
3 : 27
5 : 125
7 : 343
9 : 729
9

b)
1
4
9
16
25
36
49
64
81
100

c)
012
212
412
612
812
done

d)
1
2
3
4
5
6
7
8
9
10
385

5.
5. What do you think will happen if you use a negative number as the second 
parameter in the round function? For example, what should be the result of 
round (314.159265, -1) ? Explain the rationale for your answer. After you've
 written your answer, consult the Python documentation or try out some examples
  to see what Python actually does in this case.

Since 1 rounds the tenth place, and 0 rounds the ones place,  -1 would round the tens place

6.

'''

